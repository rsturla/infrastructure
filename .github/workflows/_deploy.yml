name: Deploy

on:
  workflow_call:
    inputs:
      accounts-file:
        description: 'Path to the accounts file'
        required: true
        default: './accounts.json'
        type: string
      account:
        description: 'Account to deploy to'
        required: true
        type: string

env:
  TERRAGRUNT_NON_INTERACTIVE: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: deploy
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4
        with:
          token: ${{ secrets.INFRASTRUCTURE_PRIVATE_PAT }}
          submodules: 'true'

      - name: Extract Account Info
        id: extract-information
        uses: ./.github/actions/extract-account-info
        with:
          accounts-file: ${{ inputs.accounts-file }}
          account-name: ${{ inputs.account }}

      - name: Install Dependencies
        if: steps.extract-information.outputs.account-is-setup == 'true'
        uses: ./.github/actions/setup-terragrunt
        with:
          ssh-private-key: ${{ secrets.TERRAFORM_MODULES_PRIVATE_KEY }}

      - name: Configure AWS Credentials
        if: steps.extract-information.outputs.account-is-setup == 'true'
        uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502 # v4
        with:
          aws-region: ${{ vars.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_DEPLOY_ENTRYPOINT_ROLE_ARN }}
          role-session-name: ${{ inputs.account }}-${{ github.run_id }}

      - name: Assume Role
        if: steps.extract-information.outputs.account-is-setup == 'true'
        uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502 # v4
        with:
          aws-region: ${{ vars.AWS_REGION }}
          role-to-assume: arn:aws:iam::${{ steps.extract-information.outputs.account-id }}:role/${{ vars.AWS_DEPLOY_ROLE_NAME }}
          role-session-name: ${{ inputs.account }}-${{ github.run_id }}
          role-chaining: true

      - name: Init
        if: steps.extract-information.outputs.account-is-setup == 'true'
        working-directory: ${{ inputs.account }}
        run: terragrunt run-all init

      # The uploaded artifact leaks account information, so it is disabled since this repo is public.
      # Typically, you would upload the plan artifact to the GitHub Actions workflow run so it can be downloaded
      # in the deploy job.
      # - name: Download Plan
      #   uses: actions/download-artifact@v4
      #   with:
      #     name: ${{ inputs.account }}-tfplan

      - name: Plan
        if: steps.extract-information.outputs.account-is-setup == 'true'
        working-directory: ${{ inputs.account }}
        run: terragrunt run-all plan -concise -lock=false --terragrunt-no-auto-init --terragrunt-out-dir $(pwd)

      - name: Apply
        if: steps.extract-information.outputs.account-is-setup == 'true'
        working-directory: ${{ inputs.account }}
        run: terragrunt run-all apply --terragrunt-no-auto-init --terragrunt-out-dir $(pwd)
